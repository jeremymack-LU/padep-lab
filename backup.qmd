---
title: "Overview"
format: html
editor: visual
project:
  type: website
  output-dir: docs
---

```{=html}
<style>
  pre {
    background-color: lightyellow;
    white-space: pre-wrap;
    line-height: 100%;
  }
</style>
```
### **Script summary:**

The following script summarizes the relationship between wind speed and PM2.5. Data were collected by PA DEP at their Freemansburg site.

```{r}
#| echo: false
library(leaflet)
leaflet() %>% 
    setView(lat = 40.628,
            lng = -75.341,
            zoom = 14) %>% 
    addTiles("https://tile.jawg.io/jawg-terrain/{z}/{x}/{y}{r}.png?access-token=bka2W5SwTAqWUfIAw12i6iTLOqNOi5nY7EPkdAgUlFOXyxuzOJI7TIQRQ3rYBnCa") %>% 
    addCircleMarkers(lng=-75.341,
                    lat=40.628,
                    stroke=TRUE,
                    weight=1,
                    color='black',
                    fillOpacity=0.6,
                    fillColor='blue')

```

-----

### **Import PA DEP datasets:**

```{r}
#| include: false
#| message: false
# Install and load required packages
pacman::p_load(segmented,tidyverse)

# Download wind and PM2.5 data
url1 <- 'https://www.dropbox.com/s/djsrnlou8gfd9h6/pa_dep_wind.csv?dl=1'
url2 <- 'https://www.dropbox.com/s/f60llaltcclen47/pa_dep_pm25.csv?dl=1'

wind <- read_csv(url1)
pm25 <- read_csv(url2)
```

```{r}
#| eval: false
#| warning: false
# Install and load required packages
install.packages('pacman')
pacman::p_load(segmented,tidyverse)

# Download wind and PM2.5 data
url1 <- 'https://www.dropbox.com/s/djsrnlou8gfd9h6/pa_dep_wind.csv?dl=1'
url2 <- 'https://www.dropbox.com/s/f60llaltcclen47/pa_dep_pm25.csv?dl=1'

wind <- read_csv(url1)
pm25 <- read_csv(url2)
```

```{r}
#| eval: false
#| warning: false
# View the wind dataset in a spreadsheet-style view
View(wind)
     
# Check the structure of the wind dataset
str(wind)

# Quick summary of the wind dataset
summary(wind)
```

```{r}
#| eval: true
#| warning: false
# Subset data and create a date variable
wind.avg <- wind %>%
  select(Day,Avg,Month) %>%
  mutate(Year=str_sub(Month,-4),
         Month=str_sub(Month,1,nchar(Month)-5),
         Date=as.Date(paste(Year,Month,Day,sep='-'))) %>%
  arrange(Date) %>%
  rename(avg_wind=Avg) %>%
  select(Date,avg_wind)

pm25.avg <- pm25 %>%
  select(Day,Avg,Month) %>%
  mutate(Year=str_sub(Month,-4),
         Month=str_sub(Month,1,nchar(Month)-5),
         Date=as.Date(paste(Year,Month,Day,sep='-'))) %>%
  arrange(Date) %>%
  rename(avg_pm25=Avg) %>% 
  select(Date,avg_pm25)

# Join wind and PM2.5 datasets together
dep.data <- pm25.avg %>%
  left_join(wind.avg, by='Date')

summary(dep.data)
```

```{r}
#| include: false
#| warning: false
# Inspect data for outliers
boxplot(dep.data$avg_pm25)
boxplot(dep.data$avg_wind)

# Remove extreme outliers
dep.data <- dep.data %>% 
  drop_na() %>% 
  filter(avg_wind < 30) %>%
  filter(between(avg_pm25, 0, 50))
  #filter(avg_pm25 <= 50 & avg_pm25 > 0)
```

-----

### **Visualize the data:**

```{r}
#| eval: true
# Plot relationship between wind and PM2.5
dep.data %>%
  ggplot(aes(avg_wind,avg_pm25)) + geom_point()

# Transform data
dep.data <- dep.data %>%
  mutate(Tavg_pm25=log(avg_pm25),
         Tavg_wind=log(avg_wind+0.01))

# Plot relationship between wind and PM2.5 after transforming data
dep.data %>%
  ggplot(aes(Tavg_wind,Tavg_pm25)) + geom_point()
```

-----

### **Linear model fit:**

```{r}
#| eval: true
# Fit a linear model to the data
lm.fit   <- lm(Tavg_pm25~Tavg_wind,data=dep.data)

# Extract fitted values from segment analysis
lm.fit.df   <- fitted(lm.fit)

# Create dataset with wind and fitted PM2.5 data
lm.model.df <- data.frame(Tavg_wind=dep.data$Tavg_wind,
                          fit_pm25=lm.fit.df)

# Plot relationship between wind and PM2.5 after transforming data
# and add the linear model fit
dep.data %>%
  ggplot(aes(Tavg_wind,Tavg_pm25)) +
  geom_point(size=0.25,alpha=0.5) +
  geom_line(data=lm.model.df,
            aes(x=Tavg_wind, y=fit_pm25),
            size=0.5) +
  theme_minimal() +
  labs(x='Avg. wind (log-transformed)',
       y='Avg. PM 2.5 (log-transformed)')
```

-----

### **Segmented model fit:**

```{r}
#| eval: true
# Break point analysis
seg.fit  <- segmented(lm.fit)

# Extract fitted values from segment analysis
seg.fit.df   <- fitted(seg.fit)

# Create dataset with wind and fitted PM2.5 data
seg.model.df <- data.frame(Tavg_wind=dep.data$Tavg_wind,
                           fit_pm25=seg.fit.df)

# Plot relationship between wind and PM2.5 after transforming data
# and add the segmented model fit
dep.data %>%
  ggplot(aes(Tavg_wind,Tavg_pm25)) +
  geom_point(size=0.25,alpha=0.5) +
  geom_line(data=seg.model.df,
            aes(x=Tavg_wind, y=fit_pm25),
            size=0.5) +
  theme_minimal() +
  labs(x='Avg. wind (log-transformed)',
       y='Avg. PM 2.5 (log-transformed)')
```
